### 모두의 깃&깃허브

#### 브랜치 충돌 (conflict)
- 서로 다른 브랜치에서 "같은 파일의 같은 부분을 동시에 수정" 하게 되면, merge 시점에서 어떤 정보를 merge 시켜야 할 지 알 수 없다.
  - A 브랜치에서 a.txt 파일의 첫 번째 줄을 "Hell0!" 라고 수정하고, B 브랜치에서 a.txt 파일의 첫 번째 줄을 "Hi!" 라고 수정했다면 둘 중 어느 부분을 최종 수정본으로 인식해야 할 지 알 수 없다.
- 이런 상황을 "충돌(conflict)" 라고 하며, 깃에서는 자체적으로 해당 경우를 해결할 수 없기 때문에 사용자가 직접 merge 내용을 확정해야 한다.

#### source tree 에서 충돌 재연
1. master branch 에 a.md 생성, 내용 : a
2. master branch 로 부터 foo branch 생성 후, a.md 수정, 내용 : foo 
3. master branch 로 돌아와 a.md 수정, 내용 : master
4. foo branch 를 master branch 로 merge ==> 정상적으로면 여기에서 "충돌 병합" 팝업 보임. 
5. 스테이지에 올라가지 않은 a.md 내용에 <<<<<< HEAD 라는 표시 하단에 master branch 의 내용이, >>>>>>> foo 라는 표시 위에 foo branch 의 내용이 조회됨

#### source tree 에서 충돌 해결
1. 충돌 해결을 위해선 충돌이 발생한 파일의 충돌을 해결해야 정상적으로 merge 할 수 있음
  - 충돌을 해결한다는 의미는 서로 다른 브랜치가 동시에 수정한 부분에서 어떤 브랜치의 결과를 최종적으로 merge 할 것인지 직접 선택하는 것을 의미
2. 충돌이 발생한 파일에 아래와 같은 내용이 추가됨
  <<<<<<<<< HEAD
  content 1
  ==============
  content 2
  >>>>>>>>> foo
3. 여기서 content 1 은 "현재 체크아웃 중인 branch 의 내용(여기에선 master branch 의 내용) 이, content 2 에는 "merge 하고자 하는 branch 의 내용(여기에선 foo branch 의 내용) 이 조회됨
4. 스테이지에 올라가지 않은 충돌이 발생한 파일을 우클릭하면, "충돌 해결하기" 메뉴를 클릭
5. 해당 메뉴를 클릭하면, 아래 2가지 선택지 중에 하나를 선택
  - ResolveUsingMineBaseFormat : 현재 체크아웃 중인 브랜치의 내용을 적용. 여기선 master 브랜치
  - ResolveUsingTheirsBaseFormat : 저장소에 있는 내용, 즉 merge 하려는 브랜치의 내용을 적용. 여기선 foo 브랜치
6. 위 2가지 선택지 중 1가지를 선택하면, 충돌된 파일을 가리키던 커밋하지 않은 변경사항은 사라지고, 선택한 브랜치의 내용이 최종 적용됨

#### 브랜치 재배치(rebase)
- rebase 란, 브랜치가 새로 뻗어나온 시점을 변경하는 작업을 의미
  - 예를 들어, master 브랜치에 2번의 커밋을 하고 foo 브랜치를 checkout 해 2번의 커밋을 했다고 가정하면, 아래와 같은 그래프가 생성됨
    master : -- 1번 커밋 -- 2번 커밋
    foo :                   |-- foo 1번 커밋 -- foo 2번 커밋 
  - 이 상황에서 master 브랜치에 2번에 커밋이 더 추가된다면, 아래와 같은 그래프가 됨
    master : -- 1번 커밋 -- 2번 커밋 -- 3번 커밋 -- 4번 커밋
    foo :                   | -- foo 1번 커밋 -- foo 2번 커밋
  - 이 상황에서, foo 브랜치의 생성 시점을 master 브랜치의 4번 커밋 시점으로 변경한다면, 아래처럼 그래프가 변경됨
    master : -- 1번 커밋 -- 2번 커밋 -- 3번 커밋 -- 4번 커밋
    foo :                                         | -- foo 1번 커밋 -- foo 2번 커밋
  - 이렇게, foo 브랜치가 생성된 시점을 변경하는 작업을 브랜치 재배치, rebase 라고 함

#### source tree 에서 rebase 실습
1. master 브랜치에 a.md 파일을 생성하여 1번 커밋, b.md 파일을 추가하여 2번 커밋을 생성
2. foo 브랜치 체크아웃 후, foo_c.md 파일을 생성하여 1번 커밋, foo_d.md 파일을 생성하여 2번 커밋을 생성
3. master 브랜치로 이동 후, c.md 파일을 생성하여 3번 커밋, d.md 파일을 생성하여 4번 커밋을 생성
4. foo 브랜치를 rebase 하기 위해 foo 브랜치로 이동
5. rebase 하고자 하는 브랜치의 커밋에 우클릭. 이 경우 master 브랜치의 4번 커밋에 rebase 하기 위해 master 브랜치의 4번 커밋에 우클릭
6. 메뉴 중 "재배치" 메뉴 클릭
7. "재배치 확인" 메세지 팝업에서 확인 버튼 클릭
8. 커밋 트리가 변경된 것을 확인


